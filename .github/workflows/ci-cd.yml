name: Deploy Fast API Application with Monitoring

on: workflow_dispatch
permissions:
  contents: read
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install pytest pytest-asyncio httpx tox

    - name: Run tox
      run: tox -e py

    - name: Run tests
      run: |
         PYTHONPATH=. pytest app/tests/ -v

    - name: Sonar Scan
      uses: sonarsource/sonarqube-scan-action@1a6d90ebcb0e6a6b1d87e37ba693fe453195ae25
      with:
        args: >
          -Dsonar.projectKey=rigamortus_muchconsulting
          -Dsonar.organization=rigamortus
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.python.coverage.reportPaths=app/coverage.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Docker
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }} 
        PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $USERNAME -p $PASSWORD
        
    - name: Build Image for Testing
      run: |
        docker build -t demoapp:v1 .
    - name: Run Snyk Test
      uses: snyk/actions/docker@b98d498629f1c368650224d6d212bf7dfa89e4bf
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: docker.io/demoapp:v1
        args: --file=./Dockerfile --severity-threshold=medium

  cd:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.ci.result == 'success'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up SSH key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/my-gcp-key ~/.ssh/my-gcp-key.pub
        echo $SSH_PRIVATE_KEY > ~/.ssh/my-gcp-key
        chmod 600 ~/.ssh/my-gcp-key
        echo $SSH_PUBLIC_KEY > ~/.ssh/my-gcp-key.pub
        chmod 644 ~/.ssh/my-gcp-key.pub

    - name: Auth to GCP (Workload Identity Federation)
      uses: google-github-actions/auth@v2
      env:
        PROJECT_ID: ${{ vars.GCP_PROJECT }}
        PROJECT_NUMBER: ${{ vars.GCP_PROJECT_NUMBER }}
      with:
        workload_identity_provider: projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github/providers/github-provider
        service_account: github-actions-sa@${{ vars.GCP_PROJECT }}.iam.gserviceaccount.com

    

    - name: Install Ansible and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ansible google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

    # - name: Configure GCP credentials
    #   uses: google-github-actions/auth@v1
    #   with:
    #     token_format: 'access_token'
    #     workload_identity_provider: ${{ secrets.GCP_WIP }}
    #     service_account: ${{ secrets.GCP_SA_EMAIL }}

    # - name: Set up gcloud CLI
    #   uses: google-github-actions/setup-gcloud@v1
    #   with:
    #     project_id: ${{ secrets.GCP_PROJECT }}
    #     export_default_credentials: true

    # - name: Run Ansible Playbook
    #   env:
    #     GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
    #     GCP_SERVICE_ACCOUNT_FILE: ${{ secrets.GCP_SA_FILE }}
    #   run: |
    #     ansible-playbook -i "localhost," -c local ansible/playbook.yml --extra-vars "gcp_project=${{ secrets.GCP_PROJECT }} gcp_cred_kind=serviceaccount gcp_cred_file=${{ secrets.GCP_SA_FILE }} region=us-central1 zone=us-central1-a infra_state=present docker_image=docker.io/davidkalugo/fastapi-demo:latest"

    - name: Run playbook
      env:
        GCP_PROJECT: ${{ vars.GCP_PROJECT }}
      uses: dawidd6/action-ansible-playbook@93764e7048f4dd16117d134dadb4b36e8ee73227
      with:
        playbook: ansible/roles/main.yml
        inventory: localhost
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        options: |
          --extra-vars "gcp_project=${{ vars.GCP_PROJECT }} gcp_cred_kind=application region=europe-west1 zone=europe-west1-b infra_state=present"
