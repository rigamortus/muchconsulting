- name: Create .ssh directory
  file:
    path: ~/.ssh
    state: directory
    mode: '0700'

- name: Create private SSH key from secret
  copy:
    content: "{{ lookup('env', 'SSH_PRIVATE_KEY') }}\n"
    dest: ~/.ssh/my-gcp-key
    mode: '0600'

- name: Generate public key from private key
  shell: ssh-keygen -y -f ~/.ssh/my-gcp-key > ~/.ssh/my-gcp-key.pub
  args:
    creates: ~/.ssh/my-gcp-key.pub

- name: Debug - Check key format
  shell: head -1 ~/.ssh/my-gcp-key
  register: key_check

- name: Show key format
  debug:
    var: key_check.stdout

- name: Create a Compute Instance
  google.cloud.gcp_compute_instance:
    name: testvm
    machine_type: e2-small
    disks:
    - auto_delete: 'true'
      boot: 'true'
      source: "{{ disk }}"
    metadata:
      ssh-keys: "ubuntu:{{ lookup('file', '~/.ssh/my-gcp-key.pub') }}"
      cost-center: 'muchconsulting'
    labels:
      environment: development
      team: devops
    network_interfaces:
    - network: "{{ network }}"
      access_configs:
      - name: External NAT
        nat_ip: "{{ address }}"
        type: ONE_TO_ONE_NAT
    zone: europe-west1-b
    project: "{{ lookup('env','GCP_PROJECT') }}"
    auth_kind: application
    state: "{{ infra_state | default('present') }}"
  register: vm

- name: Add new VM to inventory group 'targets'
  add_host:
    name: "{{ vm.networkInterfaces[0].accessConfigs[0].natIP }}"
    groups: targets
    ansible_user: ubuntu
    ansible_ssh_private_key_file: ~/.ssh/my-gcp-key
  when: infra_state == 'present'


- name: Set IP variable
  shell:
    echo "Server={{ vm.networkInterfaces[0].accessConfigs[0].natIP }}" >> $GITHUB_ENV
  when: infra_state == 'present'

- name: Tag VM with 'ssh'
  shell: |
    gcloud compute firewall-rules create allowo-ssh \
      --allow tcp:22 \
      --description "Allow SSH from anywhere" \
      --source-ranges 0.0.0.0/0 \
      --target-tags ssh \
      --network gcp-vpc \
      --project {{ lookup('env','GCP_PROJECT') }} \
      --quiet
  ignore_errors: true
  when: infra_state == 'present'

- name: Tag VM with 'ssh'
  shell: |
    gcloud compute instances add-tags testvm \
      --tags ssh \
      --zone europe-west1-b \
      --project {{ lookup('env','GCP_PROJECT') }} \
      --quiet
  ignore_errors: true
  when: infra_state == 'present'